# Generated by Django 5.1.2 on 2024-10-31 18:11

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={
                            "unique": "A user with that email already exists."
                        },
                        max_length=254,
                        unique=True,
                        verbose_name="email address",
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/%Y/%m/"
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("is_premium", models.BooleanField(default=False)),
                ("subscription_start", models.DateTimeField(blank=True, null=True)),
                ("subscription_end", models.DateTimeField(blank=True, null=True)),
                ("auth_provider", models.CharField(default="email", max_length=255)),
                (
                    "plan_type",
                    models.CharField(
                        choices=[
                            ("basic", "Basic"),
                            ("premium", "Premium"),
                            ("enterprise", "Enterprise"),
                        ],
                        default="basic",
                        max_length=20,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("user", "User"),
                            ("admin", "Admin"),
                            ("moderator", "Moderator"),
                        ],
                        default="user",
                        max_length=10,
                    ),
                ),
                (
                    "preferred_language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("es", "Spanish"),
                            ("fr", "French"),
                        ],
                        default="en",
                        max_length=50,
                    ),
                ),
                (
                    "preferred_theme",
                    models.CharField(
                        choices=[
                            ("light", "Light"),
                            ("dark", "Dark"),
                            ("system", "System"),
                        ],
                        default="light",
                        max_length=10,
                    ),
                ),
                ("notifications_enabled", models.BooleanField(default=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("search_count", models.IntegerField(default=0)),
                ("is_verified", models.BooleanField(default=False)),
                ("last_login_ip", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "registration_ip",
                    models.GenericIPAddressField(blank=True, null=True),
                ),
                ("failed_login_attempts", models.PositiveIntegerField(default=0)),
                ("account_locked_until", models.DateTimeField(blank=True, null=True)),
                ("daily_search_limit", models.PositiveIntegerField(default=100)),
                (
                    "api_key",
                    models.UUIDField(blank=True, default=uuid.uuid4, null=True),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True, related_name="customuser_groups", to="auth.group"
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="customuser_permissions",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "indexes": [
                    models.Index(fields=["email"], name="authenticat_email_486e08_idx"),
                    models.Index(
                        fields=["last_activity"], name="authenticat_last_ac_aef58c_idx"
                    ),
                    models.Index(
                        fields=["username"], name="authenticat_usernam_b8ce7c_idx"
                    ),
                ],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
